package compilador.gui;

import compilador.config.Config;
import compilador.controllers.ControllerRun;
import javax.swing.JFileChooser;
import compilador.controllers.ControllerFile;
import compilador.controllers.ControllerGrammar;
import compilador.controllers.ControllerSymbolsTable;
import compilador.models.compiler.Grammar;
import compilador.models.compiler.SymbolsTable;
import java.io.File;

/**
 *
 * @author Javier
 */
public class GUI extends javax.swing.JFrame {

    private File file;

    /**
     * Creates new form Gui
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ToolBar = new javax.swing.JToolBar();
        CodeContainer = new javax.swing.JScrollPane();
        TextAreaCode = new javax.swing.JTextArea();
        PanelBottom = new javax.swing.JPanel();
        ConsoleContainer = new javax.swing.JScrollPane();
        TextAreaConsole = new javax.swing.JTextArea();
        MenuBar = new javax.swing.JMenuBar();
        MenuFile = new javax.swing.JMenu();
        MenuItemOpen = new javax.swing.JMenuItem();
        MenuRun = new javax.swing.JMenu();
        MenuItemRun = new javax.swing.JMenuItem();
        MenuSettings = new javax.swing.JMenu();
        MenuHelp = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Compilador");

        ToolBar.setFloatable(false);
        ToolBar.setRollover(true);

        TextAreaCode.setColumns(20);
        TextAreaCode.setRows(5);
        CodeContainer.setViewportView(TextAreaCode);

        PanelBottom.setBorder(javax.swing.BorderFactory.createTitledBorder("Consola"));

        TextAreaConsole.setColumns(20);
        TextAreaConsole.setRows(5);
        ConsoleContainer.setViewportView(TextAreaConsole);

        javax.swing.GroupLayout PanelBottomLayout = new javax.swing.GroupLayout(PanelBottom);
        PanelBottom.setLayout(PanelBottomLayout);
        PanelBottomLayout.setHorizontalGroup(
            PanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConsoleContainer, javax.swing.GroupLayout.DEFAULT_SIZE, 698, Short.MAX_VALUE)
        );
        PanelBottomLayout.setVerticalGroup(
            PanelBottomLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ConsoleContainer)
        );

        MenuFile.setText("Archivo");

        MenuItemOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        MenuItemOpen.setText("Abrir");
        MenuItemOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemOpenActionPerformed(evt);
            }
        });
        MenuFile.add(MenuItemOpen);

        MenuBar.add(MenuFile);

        MenuRun.setText("Ejecucion");

        MenuItemRun.setText("Ejecutar");
        MenuItemRun.setToolTipText("");
        MenuItemRun.setEnabled(false);
        MenuItemRun.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuItemRunActionPerformed(evt);
            }
        });
        MenuRun.add(MenuItemRun);

        MenuBar.add(MenuRun);

        MenuSettings.setText("Configuracion");
        MenuBar.add(MenuSettings);

        MenuHelp.setText("Ayuda");
        MenuBar.add(MenuHelp);

        setJMenuBar(MenuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ToolBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(PanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(CodeContainer))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ToolBar, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(CodeContainer, javax.swing.GroupLayout.PREFERRED_SIZE, 326, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PanelBottom, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenuItemOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemOpenActionPerformed
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        int returnVal = chooser.showOpenDialog(null);

        if (returnVal == JFileChooser.APPROVE_OPTION) {
            setFile(chooser.getSelectedFile());
            ControllerFile controller = new ControllerFile();
            try {
                TextAreaCode.setText(controller.getContent(getFile()));
                enableStateReadyToRun();
            } catch (Exception ex) {
                TextAreaConsole.append(ex.getMessage() + "\n");
            }
        }
    }//GEN-LAST:event_MenuItemOpenActionPerformed

    /**
     * Get the value of file
     *
     * @return the value of file
     */
    public File getFile() {
        return file;
    }

    /**
     * Set the value of file
     *
     * @param file new value of file
     */
    public void setFile(File file) {
        this.file = file;
    }

    private void MenuItemRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuItemRunActionPerformed
        try {
            ControllerFile controllerFile = new ControllerFile();
            /*se carga la tabla de simbolos*/
            ControllerSymbolsTable controllerSymbols = new ControllerSymbolsTable(controllerFile);
            SymbolsTable table = controllerSymbols.getContent(new File(Config.FILENAME_SYMBOLS_TABLE));
            TextAreaConsole.append("Tabla de simbolos cargada" + "\n");

            /*se carga la gramatica*/
//            ControllerGrammar controllerGrammar = new ControllerGrammar(controllerFile);
//            Grammar grammar = controllerGrammar.getContent(new File(Config.FILENAME_GRAMMAR), new File(Config.FILENAME_GRAMMAR_SPECIAL_SYMBOLS));
//            TextAreaConsole.append("gramatica cargada" + "\n");

            /*se carga el controlador de ejecucion*/
            ControllerRun controller = new ControllerRun(getFile().getParent(), table, null);
            if (controller.run(TextAreaCode.getText())) {
                TextAreaConsole.append("archivo objeto escrito\n");
                TextAreaConsole.append("analisis lexico exitoso....\n");
            }
        } catch (Exception ex) {
            TextAreaConsole.append(ex.getMessage() + "\n");
        }
    }//GEN-LAST:event_MenuItemRunActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new GUI().setVisible(true);
        });
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane CodeContainer;
    private javax.swing.JScrollPane ConsoleContainer;
    private javax.swing.JMenuBar MenuBar;
    private javax.swing.JMenu MenuFile;
    private javax.swing.JMenu MenuHelp;
    private javax.swing.JMenuItem MenuItemOpen;
    private javax.swing.JMenuItem MenuItemRun;
    private javax.swing.JMenu MenuRun;
    private javax.swing.JMenu MenuSettings;
    private javax.swing.JPanel PanelBottom;
    private javax.swing.JTextArea TextAreaCode;
    private javax.swing.JTextArea TextAreaConsole;
    private javax.swing.JToolBar ToolBar;
    // End of variables declaration//GEN-END:variables

    /**
     * habilita la interfaz para que se pueda ejecutar los algoritmos
     * principales de compilacion porque se han dado las condiciones para ello
     */
    public void enableStateReadyToRun() {
        MenuItemRun.setEnabled(true);
    }
}
